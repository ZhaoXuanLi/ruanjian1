package jiajianchengchu;

import java.util.Scanner;

public class Test 
{
	public static void main(String[] args)
	{
		Scanner scanner=new Scanner(System.in);
		System.out.print("请输入要生成的随机数个数:");
		int num=scanner.nextInt(),i;
		Shi[] shi=new Shi[num];
		System.out.print("请输入参与数的个数:");
		int n=scanner.nextInt();
		System.out.print("请选择是否有分数（0有 1没有）:");
		int f=scanner.nextInt();
		int d1=0,d2=0;
		if(f==1)
		{
			System.out.print("请输入整数的生成范围:");
			d1=scanner.nextInt();
			d2=scanner.nextInt();
		}
		System.out.print("请选择是否有乘除（0有 1没有）:");
		int cc=scanner.nextInt();
		int cy=2;
		if(cc==0&&f==1)
		{
			System.out.print("请选择除法是否有余数（0有 1没有）:");
			cy=scanner.nextInt();
		}
		int jf=0;
		if(cc==1)
		{
			System.out.print("请选择有无负数（0有 1没有）:");
			jf=scanner.nextInt();
		}
		System.out.print("请选择是否有括号（0有 1没有）:");
		int kh=scanner.nextInt();
//		System.out.print("请输入参与数的个数:");
//		int n=scanner.nextInt();
		System.out.print(String.format("%-6s","序号"));
		System.out.println(String.format("%-6s","算式"));
		for(i=0;i<num;i++)
		{
			shi[i]=new Shi(n);
			shi[i].chuangjian(f,d1,d2,cc,jf,kh);
			shi[i].operate(f,d1,d2,cc,jf,cy,kh);
			chachong(i,shi,f,d1,d2,cc,jf,cy,kh);
			System.out.print(String.format("%-6s",i+1));
			shi[i].shuchu(kh);
		}
		System.out.print("是否显示正确结果（是或否）：");
		String in=scanner.next();
		while(!(in.equals("是")||in.equals("否")))
		{
			System.out.print("请输入正确命令（是或否）：");
			in=scanner.next();
		}
		if(in.equals("是"))
		{
			System.out.print(String.format("%-6s","序号"));
			System.out.println(String.format("%-6s","算式结果"));
			for(i=0;i<num;i++)
			{
				System.out.print(String.format("%-6s",i+1));
				System.out.println(String.format("%-6s",shi[i].value.output()));
			}
			System.out.println("答案完毕，您做的怎么样啊！");
		}
		else System.out.println("谢谢您的配合，加油！");
	}
	
	static void chachong(int n,Shi[] x,int f,int d1,int d2,int cc,int jf,int cy,int kh)
	{
		int i;
		for(i=0;i<n;i++)
		{
			if(x[n].equals(x[i]))
			{
				x[n].chuangjian(f,d1,d2,cc,jf,kh);
				x[n].operate(f,d1,d2,cc,jf,cy,kh);
				chachong(n,x,f,d1,d2,cc,jf,cy,kh);
				break;
			}
		}
	}
}

class Shi
{
	Fenshu a[];
	Fenshu c[];
	Fenshu value;//存储表达式的值
	int b[];
	int d[];//计算值的时候需要操作，不改变原来的值
	int n;
	int k;//计算值的时候用到范围
	int m1,m2;//括号位置
	int m11,m21;//计算时用到括号的位置
	Shi()
	{
	}
	Shi(int n)
	{
		this.n=n;
		a=new Fenshu[n];
		for(int i=0;i<n;i++)
		{
			a[i]=new Fenshu();
		}
		c=new Fenshu[n];
		for(int i=0;i<n;i++)
		{
			c[i]=new Fenshu();
		}
		b=new int[n-1];
		d=new int[n-1];
		value=new Fenshu();
	}
	void chuangjian(int f,int d1,int d2,int cc,int jf,int kh)
	{
		if(f==1)
		{
			a[0].chuangjianzhengshu(d1,d2);
			for(int i=1;i<n;i++)
			{
				if(cc==0)
				{
					b[i-1]=(int)(Math.random()*4);
					a[i].chuangjianzhengshu(d1,d2);
					while(b[i-1]==3&&a[i].zi==0)
					{
						a[i].chuangjianzhengshu(d1,d2);
					}
				}
				else if(cc==1)
				{
					b[i-1]=(int)(Math.random()*2);
					a[i].chuangjianzhengshu(d1,d2);
					if(jf==0)
					{
						int k=(int)(Math.random()*2);
						if(k==1) a[i].zi*=(-1);
					}
				}
			}
		}
		else if(f==0)
		{
			a[0].chuangjian();
			for(int i=1;i<n;i++)
			{
				if(cc==0)
				{
					b[i-1]=(int)(Math.random()*4);
					a[i].chuangjian();
					while(b[i-1]==3&&a[i].zi==0)
					{
						a[i].chuangjian();
					}
				}
				else if(cc==1)
				{
					b[i-1]=(int)(Math.random()*2);
					a[i].chuangjian();
					if(jf==0)
					{
						int k=(int)(Math.random()*2);
						if(k==1) a[i].zi*=(-1);
					}
				}
			}
		}
		if(kh==0)
		{
			m1=(int)(Math.random()*(n-1));
			m2=(int)(Math.random()*(n-1)+1);
			while(m2<m1+1)
			{
				m2=(int)(Math.random()*(n-1)+1);
			}
		}
	}
	
	void shuchu(int kh)
	{
		if(kh==1)
		{
			String output="";
			for(int i=0;i<n-1;i++)
			{
				output+=(a[i].output()+fuhao(b[i]));
			}
			output+=(a[n-1].output()+"=");
			
			System.out.println(String.format("%-20s",output));
		}
		else if(kh==0)
		{
			String output="";
			int i;

			for(i=0;i<n-1;i++)
			{
				if(i==m1) output+="(";
				output+=(a[i].output());
				if(i==m2) output+=")";
				output+=fuhao(b[i]);
			}
			if(i==m2) output+=(a[n-1].output()+")=");
			else output+=(a[n-1].output()+"=");
			
			System.out.println(String.format("%-20s",output));
		}
	}
	
	String fuhao(int a)
	{
		String fuhao="";
		if(a==0) fuhao="+";
		if(a==1) fuhao="-";
		if(a==2) fuhao="*";
		if(a==3) fuhao="÷";
		return fuhao;
	}
	
	void operate(int f,int d1,int d2,int cc,int jf,int cy,int kh)
	{
		int i,e;
		k=n;
		for(i=0;i<n;i++)
		{
			c[i]=a[i];
		}
		for(i=0;i<n-1;i++)
		{
			d[i]=b[i];
		}
		m11=m1;
		m21=m2;
		
		if(kh==0)
		{
			while(ifchengchukuo()!=m21)
			{
				i=ifchengchukuo();
				if(d[i]==2)
				{
					c[i]=c[i].multiply(c[i+1]);
				}
				else if(d[i]==3)
				{
					if(c[i+1].zi==0)
					{
						chuangjian(f,d1,d2,cc,jf,kh);
						operate(f,d1,d2,cc,jf,cy,kh);
						return;
					}
					c[i]=c[i].divide(c[i+1]);
					if(c[i].zi%c[i].mu!=0&&cy==1)
					{
						chuangjian(f,d1,d2,cc,jf,kh);
						operate(f,d1,d2,cc,jf,cy,kh);
						return;
					}
				}
				for(e=i+1;e<k-1;e++)
				{
					c[e]=c[e+1];
				}
				for(e=i;e<k-2;e++)
				{
					d[e]=d[e+1];
				}
				k--;
				m21--;
			}
			
			while((m21-m11)!=0)
			{
				if(d[m11]==0)
				{
					c[m11]=c[m11].add(c[m11+1]);
				}
				else if(d[m11]==1)
				{
					c[m11]=c[m11].minus(c[m11+1]);
					if(jf==1&&c[m11].zi<0)
					{
						chuangjian(f,d1,d2,cc,jf,kh);
						operate(f,d1,d2,cc,jf,cy,kh);
						return;
					}
				}
				
				for(e=m11+1;e<k-1;e++)
				{
					c[e]=c[e+1];
				}
				for(e=m11;e<k-2;e++)
				{
					d[e]=d[e+1];
				}
				k--;
				m21--;
			}
		}
	
		while(ifchengchu()!=k-1)
		{
			i=ifchengchu();
			if(d[i]==2)
			{
				c[i]=c[i].multiply(c[i+1]);
			}
			else if(d[i]==3)
			{
				if(c[i+1].zi==0)
				{
					chuangjian(f,d1,d2,cc,jf,kh);
					operate(f,d1,d2,cc,jf,cy,kh);
					return;
				}
				c[i]=c[i].divide(c[i+1]);
				if(c[i].zi%c[i].mu!=0&&cy==1)
				{
					chuangjian(f,d1,d2,cc,jf,kh);
					operate(f,d1,d2,cc,jf,cy,kh);
					return;
				}
			}
			for(e=i+1;e<k-1;e++)
			{
				c[e]=c[e+1];
			}
			for(e=i;e<k-2;e++)
			{
				d[e]=d[e+1];
			}
			k--;
		}
		
		while(k!=1)
		{
			if(d[0]==0)
			{
				c[0]=c[0].add(c[1]);
			}
			else if(d[0]==1)
			{
				c[0]=c[0].minus(c[1]);
				if(jf==1&&c[0].zi<0)
				{
					chuangjian(f,d1,d2,cc,jf,kh);
					operate(f,d1,d2,cc,jf,cy,kh);
					return;
				}
			}
			
			for(e=1;e<k-1;e++)
			{
				c[e]=c[e+1];
			}
			for(e=0;e<k-2;e++)
			{
				d[e]=d[e+1];
			}
			k--;
		}
		
		value=c[0];
	}

	int ifchengchu()
	{
		int i;
		for(i=0;i<k-1;i++)
		{
			if(d[i]==2||d[i]==3)
			{
				break;
			}
		}
		return i;
	}
	
	int ifchengchukuo()
	{
		int i;
		for(i=m11;i<m21;i++)
		{
			if(d[i]==2||d[i]==3)
			{
				break;
			}
		}
		return i;
	}
	
	boolean equals(Shi y)
	{
		boolean flag=true;
		for(int i=0;i<n;i++)
		{
			if(!a[i].equals(y.a[i]))
			{
				flag=false;
				break;
			}
		}
		for(int i=0;i<n-1;i++)
		{
			if(!(b[i]==y.b[i]))
			{
				flag=false;
				break;
			}
		}
		if(!(m1==y.m1&&m2==y.m2)) flag=false;
		return flag;
	}
}

class Fenshu
{
	int zi,mu;
	
	Fenshu()
	{
	}
	
	boolean equals(Fenshu x)
	{
		if(zi*x.mu==mu*x.zi) return true;
		return false;
	}
	
	void chuangjian()
	{
		zi=(int)(Math.random()*100);
		mu=(int)(Math.random()*100+1);
		while(zi>mu&&zi%mu!=0)
		{
			zi=(int)(Math.random()*100);
			mu=(int)(Math.random()*100+1);
		}
		if(zi!=0)
		{
			int gongyue=gongyue(zi,mu);
			zi=zi/gongyue;
			mu=mu/gongyue;
		}
	}
	
	void chuangjianzhengshu(int d1,int d2)
	{
		zi=(int)(Math.random()*(d2-d1+1)+d1);
		mu=1;
	}
	
	int gongyue(int x,int y)
	{
		int k,i;
		k=x<y?x:y;
		for(i=k;i>=1;i--)
		{
			if(x%i==0&&y%i==0) break;
		}
		return i;
	}
	
	String output()
	{
		String out="";
		if(zi==0) out+=zi;
		else if(mu==1)
		{
			if(zi<0) out="("+zi+")";
			else out+=zi;
		}
		else out="("+zi+"/"+mu+")";
		return out;
	}
	
	Fenshu add(Fenshu x)
	{
		Fenshu k=new Fenshu();
		k.mu=mu*x.mu;
		k.zi=zi*x.mu+mu*x.zi;
		if(k.mu<0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			k.mu=k.mu*(-1);
		}
		else if(k.mu>0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.mu<0&&k.zi>0)
		{
			k.mu=k.mu*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.zi>0&&k.mu>0)
		{
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
		}
		return k;
	}
	
	Fenshu minus(Fenshu x)
	{
		Fenshu k=new Fenshu();
		k.mu=mu*x.mu;
		k.zi=zi*x.mu-mu*x.zi;
		if(k.mu<0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			k.mu=k.mu*(-1);
		}
		else if(k.mu>0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.mu<0&&k.zi>0)
		{
			k.mu=k.mu*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.zi>0&&k.mu>0)
		{
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
		}
		return k;
	}
	
	Fenshu multiply(Fenshu x)
	{
		Fenshu k=new Fenshu();
		k.mu=mu*x.mu;
		k.zi=zi*x.zi;
		if(k.mu<0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			k.mu=k.mu*(-1);
		}
		else if(k.mu>0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.mu<0&&k.zi>0)
		{
			k.mu=k.mu*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.zi>0&&k.mu>0)
		{
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
		}
		return k;
	}
	
	Fenshu divide(Fenshu x)
	{
		Fenshu k=new Fenshu();
		k.mu=mu*x.zi;
		k.zi=zi*x.mu;
		if(k.mu<0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			k.mu=k.mu*(-1);
		}
		else if(k.mu>0&&k.zi<0)
		{
			k.zi=k.zi*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.mu<0&&k.zi>0)
		{
			k.mu=k.mu*(-1);
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
			k.zi=k.zi*(-1);
		}
		else if(k.zi>0&&k.mu>0)
		{
			int gongyue=gongyue(k.zi,k.mu);
			k.zi=k.zi/gongyue;
			k.mu=k.mu/gongyue;
		}
		return k;
	}
}
